int col;
float h = 1.3;
float ynoise = random(10);
float n;

void setup(){
  size(900,900);
  background(0,10,52);
  smooth();
  //blendMode(SCREEN);
  noStroke();
  for(int i = 0; i < height; i++){
    int c = 255 * i /height;
    stroke(1*c/100,10*c/100,52*c/100);
    line(0,i,width,i);
  }
  for(int i = 0; i < 40; i++){
    float size = random(6);
    ellipse(random(width),random(height),size,size);
    colorRandom();
    Star(random(width),random(height),size*2.5,5);
    fill(240,186,174);
  }
  Milky();
}

void Milky(){
  for(int y = 0; y < 900; y++){
    n = noise(ynoise) * 700;
    float r = random(y/h+10);
    for(int x = 0; x < 100; x++){
      stroke(133,182,244,random(255));
      point(x+r+n-100,y);
      
    }
    ynoise += 0.01;
  }
}

void Star(float x, float y,float r,int prickleNum){
  int vertexNum = prickleNum * 2;
  float R;
  float outR = r;
  float inR = outR/2;
  
  pushMatrix();
  translate(x,y);
  rotate(radians(-90));
  beginShape();
  for(int i = 0; i < vertexNum; i++){
    if(i%2 == 0){
      R = outR;
    }else{
      R = inR;
    }
    vertex(R*cos(radians(360*i/vertexNum)),R*sin(radians(360*i/vertexNum)));
  }
  endShape(CLOSE);
  popMatrix();
}

void colorRandom(){
  color[] c = new color[4];
  c[0] = color(240,186,174);//pink
  c[1] = color(246,220,83);//yellow
  c[2] = color(181,211,107);//green
  c[3] = color(207,224,234);//blue
  col = int(random(0,4));
  switch(col){
    case 0:
    fill(c[0]);
    break;
    case 1:
    fill(c[1]);
    break;
    case 2:
    fill(c[2]);
    break;
    case 3:
    fill(c[3]); 
  }
}
